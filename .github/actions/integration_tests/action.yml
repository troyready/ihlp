name: Run integration tests
description: Deploy infrastructure, test it, and destroy it
inputs:
  azure_client_id:
    description: Azure AD application client ID
    required: true
  azure_subscription_id:
    description: Azure subscription ID
    required: true
  azure_tenant_id:
    description: Azure AD tenant ID
    required: true
  boundary_policy:
    description: IAM managed policy to apply as permissions boundary
    required: true
  env_suffix:
    description: 'Environment suffix'
    required: true
  google_project:
    description: Google Project ID for testing
    required: true
  google_service_account:
    description: Google service account for federated authentication
    required: true
  google_workload_identity_provider:
    description: Google identity provider for federated authentication
    required: true
runs:
  using: "composite"
  steps:
    - run: echo "Setting up AWS_WEB_IDENTITY_TOKEN_FILE"
      shell: bash
    - name: Set up AWS_WEB_IDENTITY_TOKEN_FILE
      run: |
          export AWS_WEB_IDENTITY_TOKEN_FILE=$(mktemp -d)/awscreds
          echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE
      shell: bash

    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ inputs.azure_client_id }}
          subscription-id: ${{ inputs.azure_subscription_id }}
          tenant-id: ${{ inputs.azure_tenant_id }}

    - name: Setup upterm session
      uses: lhotari/action-upterm@v1

    # https://github.com/google-github-actions/auth#configuring-gcloud
    - uses: 'google-github-actions/setup-gcloud@master'
      with:
        project_id: ${{ inputs.google_project }}
    - id: 'gcpauth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.4.0'
      with:
        workload_identity_provider: ${{ inputs.google_workload_identity_provider }}
        service_account: ${{ inputs.google_service_account }}

    - run: echo "Installing node modules"
      shell: bash
    - name: Install modules
      run: npm ci
      shell: bash
    - run: echo "Running tests"
      shell: bash
    - name: Run integration tests
      run: ENV_SUFFIX=${{ inputs.env_suffix }} AWS_PERMISSIONS_BOUNDARY_ARN=${{ inputs.boundary_policy }} npm run integration
      shell: bash
